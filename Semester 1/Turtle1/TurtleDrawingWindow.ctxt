#BlueJ class context
comment0.target=TurtleDrawingWindow
comment0.text=\r\n\ A\ simple\ window\ for\ allowing\ turtles\ to\ draw.\ You\ can\ add\ multiple\r\n\ turtles\ to\ this\ window.\ With\ the\ current\ implementation,\ drawing\r\n\ becomes\ jaggy\ when\ you\ add\ multiple\ turtles.\ This\ performance\r\n\ problem\ will\ be\ addressed\ in\ the\ next\ release.\r\n\ \r\n\ Date\ Modified\:\ February,\ 2009\r\n\r\n\ @author\ Dr\ Caffeine\r\n\r\n
comment1.params=
comment1.target=TurtleDrawingWindow()
comment1.text=\r\n\ A\ default\ constructor\ that\ creates\ an\ instance\ of\ the\ DrawingCanvas\ \r\n\ class.\ Grid\ lines\ are\ drawn,\ the\ center\ position\ of\ the\ canvas\ is\r\n\ set\ to\ (0,0)\ of\ the\ logical\ (user)\ coordinate,\ and\ the\ scaling\ \r\n\ unit\ is\ set\ to\ the\ default\ size\ defined\ by\ the\ constant\ \r\n\ DrawingCanvas.DEFAULT_UNIT.\r\n
comment2.params=w\ h
comment2.target=TurtleDrawingWindow(int,\ int)
comment2.text=\r\n\ A\ default\ constructor\ that\ creates\ an\ instance\ of\ the\ DrawingCanvas\ \r\n\ class.\ Grid\ lines\ are\ drawn,\ the\ center\ position\ of\ the\ canvas\ is\r\n\ set\ to\ (0,0)\ of\ the\ logical\ (user)\ coordinate,\ and\ the\ scaling\ \r\n\ unit\ is\ set\ to\ the\ default\ size\ defined\ by\ the\ constant\ \r\n\ DrawingCanvas.DEFAULT_UNIT.\r\n
comment3.params=owner
comment3.target=void\ add(DrawingController)
comment3.text=\r\n\ A\ mutator\ method\ that\ adds\ another\ DrawingController\ that\ will\r\n\ draw\ its\ trajectory\ on\ this\ canvas.\r\n\r\n\ @param\ owner\ A\ DrawingController\ that\ will\ draw\ its\ trajectory\ on\ this\ canvas.\r\n
comment4.params=
comment4.target=void\ clear()
comment4.text=\r\n\ Erases\ the\ current\ contents\ of\ the\ PlottingCanvas\ by\ painting\ the\ whole\ canvas\ \r\n\ with\ the\ background\ color.\r\n
comment5.params=showGrid
comment5.target=void\ setGrid(boolean)
comment5.text=\r\n\ A\ mutator\ method\ that\ sets\ the\ flag\ for\ drawing\ the\ grid\ lines.\ Passing\ true\r\n\ will\ make\ the\ grid\ lines\ to\ appear.\r\n\r\n\ @param\ showGrid\ Pass\ 'true'\ to\ show\ the\ grid\ lines.\r\n\r\n
comment6.params=x\ y
comment6.target=void\ setOrigin(int,\ int)
comment6.text=\r\n\ A\ mutator\ method\ that\ sets\ the\ origin\ point.\ The\ parameter\ (x,y)\r\n\ specifies\ the\ point\ in\ the\ logical\ coordinate\ system\ that\ corresponds\r\n\ to\ the\ physical\ center\ position\ of\ the\ canvas.\ By\ default,\ the\ center\r\n\ of\ the\ canvas\ represents\ the\ point\ (0,0)\ of\ the\ logical\ coordinate\ \r\n\ system.\ For\ example,\ if\ you\ pass\ 100\ and\ 200\ for\ the\ x\ and\ y\ parameters,\r\n\ the\ logical\ coordinate\ center\ point\ is\ shifted\ 100\ units\ to\ the\ left\ \r\n\ and\ 200\ units\ down.\r\n\r\n\ @param\ x\ The\ x-coordinate\ of\ a\ logical\ point\ that\ corresponds\ to\ the\ \r\n\ \ \ \ \ \ \ \ \ \ center\ of\ the\ canvas.\r\n\ \ \ \ \ \ \ \ \ \ \r\n\ @param\ y\ The\ y-coordinate\ of\ a\ logical\ point\ that\ corresponds\ to\ the\ \r\n\ \ \ \ \ \ \ \ \ \ center\ of\ the\ canvas.\r\n\r\n
comment7.params=pixelsPerUnit
comment7.target=void\ setUnit(double)
comment7.text=\r\n\ A\ mutator\ method\ that\ sets\ the\ scaling\ factor.\ The\ default\ scaling\ \r\n\ is\ 2\ pixels\ per\ single\ logical\ unit.\ Increase\ the\ number\ for\ a\ more\ \r\n\ zoomed\ view\ and\ decrease\ the\ number\ for\ a\ more\ zoomed\ out\ view.\r\n\ \r\n\ @param\ pixelsPerUnit\ The\ scaling\ unit.\r\n
comment8.params=visible
comment8.target=void\ setVisible(boolean)
comment8.text=\r\n\ Overrides\ the\ inherited\ method\ so\ the\ canvas\ is\ set\ up\ \r\n\ correctly.\r\n
comment9.params=
comment9.target=void\ initCanvas()
comment9.text=\r\n\ Initializes\ the\ drawing\ canvas\r\n\r\n
numComments=10
